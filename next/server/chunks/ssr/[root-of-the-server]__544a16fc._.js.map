{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { calculateProfitMargin } from \"@/ai/flows/calculate-profit-margin\";\nimport { comparePrices } from \"@/ai/flows/compare-prices\";\nimport { getSalesAnalytics } from \"@/ai/flows/sales-analytics\";\nimport type { CalculateProfitMarginInput, ComparePricesInput, ProfitMarginServerInput, SalesAnalyticsInput } from \"@/lib/types\";\nimport { chat } from \"@/ai/flows/chat\";\nimport type { ChatInput, ChatServerInput } from \"@/lib/types\";\n\nexport async function getProfitMargin(values: CalculateProfitMarginInput) {\n\n  try {\n    const result = await calculateProfitMargin(values);\n    return { success: true, data: result };\n  } catch (error) {\n    console.error(\"AI flow failed:\", error);\n    return { error: \"Failed to calculate profit margin. Please try again.\" };\n  }\n}\n\nexport async function getChatResponse(history: ChatInput['history'], message: string) {\n    try {\n        const response = await chat({ history, message });\n        return { response };\n    } catch (error) {\n        console.error(\"Chat flow failed:\", error);\n        return { error: \"Failed to get response from the assistant.\" };\n    }\n}\n\nexport async function getPriceComparison(values: ComparePricesInput) {\n  try {\n    const result = await comparePrices(values);\n    return { success: true, data: result };\n  } catch (error) {\n    console.error(\"Price comparison flow failed:\", error);\n    return { error: \"Failed to compare prices. Please try again.\" };\n  }\n}\n\n\nexport async function getSalesAnalyticsAction(values: SalesAnalyticsInput) {\n  try {\n    const result = await getSalesAnalytics(values);\n    return { success: true, data: result };\n  } catch (error) {\n    console.error(\"Sales analytics flow failed:\", error);\n    return { error: \"Failed to get sales analysis. Please try again.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAUsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/types.ts"],"sourcesContent":["import type { CalculateProfitMarginInput as CaclulateInput, CalculateProfitMarginOutput } from '@/ai/flows/calculate-profit-margin';\nimport type { ComparePricesOutput as PriceOutput } from '@/ai/flows/compare-prices';\nimport { z } from 'zod';\nimport type { SalesAnalyticsOutput } from '@/ai/flows/sales-analytics';\n\n\nexport type Calculation = CaclulateInput & CalculateProfitMarginOutput & {\n  id: string;\n  createdAt: string;\n};\n\n\nexport const profitMarginInputSchema = z.object({\n  productName: z.string().min(1, \"Product name is required.\"),\n  wholesalePrice: z.union([z.coerce.number().min(0, \"Wholesale price must be a positive number.\"), z.literal(\"\")]),\n  retailPrice: z.union([z.coerce.number().min(0, \"Retail price must be a positive number.\"), z.literal(\"\")]),\n  wholesaleSource: z.string().min(1, \"Wholesale source is required.\"),\n  retailSource: z.string().min(1, \"Retail source is required.\"),\n});\n\nexport type CalculateProfitMarginInput = z.infer<typeof profitMarginInputSchema>;\nexport type ProfitMarginServerInput = z.input<typeof profitMarginInputSchema>;\n\n\nconst HistoryMessageSchema = z.object({\n  role: z.enum(['user', 'bot']),\n  content: z.string(),\n});\n\nexport const ChatInputSchema = z.object({\n  history: z.array(HistoryMessageSchema).describe('The conversation history.'),\n  message: z.string().describe('The latest user message.'),\n});\n\nexport type ChatInput = z.infer<typeof ChatInputSchema>;\nexport type ChatServerInput = z.input<typeof ChatInputSchema>\n\nexport const ChatOutputSchema = z.string().describe('The chatbot response.');\nexport type ChatOutput = z.infer<typeof ChatOutputSchema>;\n\n\nexport const comparePricesInputSchema = z.object({\n    productName: z.string().min(1, \"Product name is required.\"),\n});\n\nexport type ComparePricesInput = z.infer<typeof comparePricesInputSchema>;\nexport type { ComparePricesOutput } from '@/ai/flows/compare-prices';\n\n\nexport const SalesAnalyticsInputSchema = z.object({\n  productCategory: z.string().describe('The product category the user is selling (e.g., \"Cotton Kurtas\").'),\n  userSalesUnits: z.coerce.number().describe('The number of units the user has sold in the last month.'),\n});\n\nexport const SalesAnalyticsOutputSchema = z.object({\n  marketAverageSales: z.number().describe('The estimated average monthly sales units for this product category in the market.'),\n  topCompetitorSales: z.number().describe('An estimated monthly sales figure for a top competitor in this category.'),\n  salesComparisonAnalysis: z.string().describe(\"A brief, encouraging analysis comparing the user's sales to the market and competitors.\"),\n  growthSuggestions: z.array(z.string()).describe('A list of 3-4 specific, actionable suggestions for the seller to improve their sales and compete more effectively.'),\n  marketTrend: z.string().describe('A one-sentence summary of the current market trend for this product category (e.g., \"Demand is increasing due to the upcoming festival season.\").'),\n});\n\nexport type SalesAnalyticsInput = z.infer<typeof SalesAnalyticsInputSchema>;\nexport type { SalesAnalyticsOutput } from '@/ai/flows/sales-analytics';\n"],"names":[],"mappings":";;;;;;;;AAEA;;AAUO,MAAM,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,gBAAgB,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;QAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAA+C,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;KAAI;IAC/G,aAAa,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;QAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAA4C,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;KAAI;IACzG,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACnC,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAClC;AAMA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAM;IAC5B,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEO,MAAM,kBAAkB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,SAAS,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,sBAAsB,QAAQ,CAAC;IAChD,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAKO,MAAM,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAI7C,MAAM,2BAA2B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AACnC;AAMO,MAAM,4BAA4B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7C;AAEO,MAAM,6BAA6B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxC,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxC,yBAAyB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7C,mBAAmB,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAChD,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/profit-calculator.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Icons } from \"./icons\";\nimport type { CalculateProfitMarginInput } from \"@/ai/flows/calculate-profit-margin\";\nimport { profitMarginInputSchema } from \"@/lib/types\";\n\ntype ProfitCalculatorProps = {\n  onSubmit: (values: CalculateProfitMarginInput) => void;\n  isLoading: boolean;\n};\n\nexport function ProfitCalculator({ onSubmit, isLoading }: ProfitCalculatorProps) {\n  const form = useForm<z.infer<typeof profitMarginInputSchema>>({\n    resolver: zodResolver(profitMarginInputSchema),\n    defaultValues: {\n      productName: \"\",\n      wholesalePrice: \"\",\n      retailPrice: \"\",\n      wholesaleSource: \"Local Market\",\n      retailSource: \"Amazon\",\n    },\n  });\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Profit Margin Calculator</CardTitle>        <CardDescription>\n          Enter product details to analyze profit potential.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"productName\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Product Name</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g. Organic Cotton T-Shirt\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                <FormField\n                control={form.control}\n                name=\"wholesalePrice\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Wholesale Price (₹)</FormLabel>\n                    <FormControl>\n                        <Input type=\"number\" placeholder=\"e.g. 550\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n                <FormField\n                control={form.control}\n                name=\"retailPrice\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Online Retail Price (₹)</FormLabel>\n                    <FormControl>\n                        <Input type=\"number\" placeholder=\"e.g. 1999\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n            </div>\n            <FormField\n              control={form.control}\n              name=\"wholesaleSource\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Wholesale Source</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g. Local Supplier\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"retailSource\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Online Retailer</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g. Amazon, Flipkart\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <div className=\"flex flex-col gap-2 sm:flex-row\">\n              <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\n                {isLoading ? (\n                  <Icons.Loader className=\"animate-spin\" />\n                ) : (\n                  <Icons.Sparkles className=\"mr-2 h-4 w-4\" />\n                )}\n                Analyze Profit\n              </Button>\n               <Button type=\"button\" variant=\"outline\" disabled className=\"w-full\">\n                <Icons.Camera className=\"mr-2 h-4 w-4\" />\n                Scan Receipt (Coming Soon)\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 629, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/calculation-result.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { Calculation } from \"@/lib/types\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\nimport { Icons } from \"./icons\";\nimport { Skeleton } from \"./ui/skeleton\";\nimport { Separator } from \"./ui/separator\";\n\ntype CalculationResultProps = {\n  calculation: Calculation | null;\n  isLoading: boolean;\n};\n\nconst StatCard = ({ title, value, icon: Icon, valueClassName }: { title: string; value: string; icon: React.ElementType, valueClassName?: string }) => (\n    <div className=\"flex items-center gap-4 rounded-lg bg-muted/10 p-4\">\n        <div className=\"rounded-full bg-primary/10 p-3\">\n             <Icon className=\"h-6 w-6 text-primary\" />\n        </div>\n        <div>\n            <p className=\"text-sm text-muted-foreground\">{title}</p>\n            <p className={`text-2xl font-bold ${valueClassName}`}>{value}</p>\n        </div>\n    </div>\n)\n\nexport function CalculationResult({ calculation, isLoading }: CalculationResultProps) {\n  if (isLoading) {\n    return (\n        <Card className=\"sticky top-24\">\n            <CardHeader>\n                <Skeleton className=\"h-8 w-3/4\" />\n                <Skeleton className=\"h-4 w-1/2\" />\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    <Skeleton className=\"h-24 w-full\" />\n                    <Skeleton className=\"h-24 w-full\" />\n                </div>\n                <div className=\"space-y-2\">\n                    <Skeleton className=\"h-6 w-1/4\" />\n                    <Skeleton className=\"h-20 w-full\" />\n                </div>\n            </CardContent>\n        </Card>\n    )\n  }\n  \n  if (!calculation) {\n    return (\n      <Card className=\"sticky top-24 flex min-h-[400px] flex-col items-center justify-center text-center\">\n        <CardHeader>\n          <div className=\"mx-auto rounded-full bg-primary/10 p-4\">\n            <Icons.Logo className=\"h-12 w-12 text-primary\" />\n          </div>\n          <CardTitle className=\"mt-4 text-2xl\">Ready for Analysis</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground\">\n            Fill out the form to calculate a product's profit margin and get AI-powered insights.\n          </p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const {\n    productName,\n    profitMargin,\n    profitAmount,\n    isProfitable,\n    analysis,\n    wholesalePrice,\n    retailPrice\n  } = calculation;\n\n  const profitMarginColor = isProfitable ? \"text-green-600\" : \"text-destructive\";\n\n  return (\n    <Card className=\"sticky top-24\">\n      <CardHeader>\n        <div className=\"flex items-start justify-between\">\n            <div>\n                <CardTitle className=\"font-headline text-3xl\">{productName}</CardTitle>\n                <CardDescription>\n                Profitability analysis based on your inputs.\n                </CardDescription>\n            </div>\n            <Badge variant={isProfitable ? \"default\" : \"destructive\"} className={`${isProfitable ? 'bg-green-600 hover:bg-green-700' : ''} text-white`}>\n                {isProfitable ? \"Profitable\" : \"Not Profitable\"}\n            </Badge>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n            <StatCard \n                title=\"Profit Margin\" \n                value={`${profitMargin.toFixed(2)}%`}\n                icon={Icons.BadgePercent}\n                valueClassName={profitMarginColor}\n            />\n             <StatCard \n                title=\"Profit Amount\" \n                value={`₹${profitAmount.toFixed(2)}`}\n                icon={Icons.TrendingUp}\n                valueClassName={profitMarginColor}\n            />\n        </div>\n\n        <div>\n            <h3 className=\"mb-2 flex items-center font-semibold\"><Icons.Sparkles className=\"mr-2 h-5 w-5 text-accent\" /> AI-Powered Analysis</h3>\n            <p className=\"rounded-lg border bg-muted/50 p-4 text-sm text-muted-foreground\">\n            {analysis}\n            </p>\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex-col items-start gap-2 text-sm text-muted-foreground\">\n        <Separator className=\"mb-2\"/>\n        <p><strong>Wholesale Price:</strong> ₹{wholesalePrice.toFixed(2)} (from {calculation.wholesaleSource})</p>\n        <p><strong>Retail Price:</strong> ₹{retailPrice.toFixed(2)} (on {calculation.retailSource})</p>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/calculation-history.tsx"],"sourcesContent":["\"use client\";\n\nimport type { Calculation } from \"@/lib/types\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Icons } from \"./icons\";\nimport { cn } from \"@/lib/utils\";\nimport { Badge } from \"./ui/badge\";\n\n\ntype CalculationHistoryProps = {\n  history: Calculation[];\n  onSelect: (calculation: Calculation) => void;\n  onClear: () => void;\n  selectedId?: string | null;\n};\n\nexport function CalculationHistory({ history, onSelect, onClear, selectedId }: CalculationHistoryProps) {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between\">\n        <div>\n            <CardTitle>Calculation History</CardTitle>\n            <CardDescription>Review your past analyses.</CardDescription>\n        </div>\n        {history.length > 0 && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClear}>\n            <Icons.Trash2 className=\"mr-2 h-4 w-4\" />\n            Clear\n          </Button>\n        )}\n      </CardHeader>\n      <CardContent>\n        <ScrollArea className=\"h-64\">\n          {history.length === 0 ? (\n            <div className=\"flex h-full flex-col items-center justify-center text-center text-muted-foreground\">\n              <Icons.History className=\"h-10 w-10\" />\n              <p className=\"mt-2 text-sm\">No calculations yet.</p>\n              <p className=\"text-xs\">Your history will appear here.</p>\n            </div>\n          ) : (\n            <div className=\"space-y-2 pr-4\">\n              {history.map((item) => (\n                <button\n                  key={item.id}\n                  onClick={() => onSelect(item)}\n                  className={cn(\n                    \"flex w-full cursor-pointer items-center justify-between rounded-md border p-3 text-left transition-colors hover:bg-accent/50\",\n                    selectedId === item.id && \"bg-accent/80\"\n                  )}\n                >\n                    <div>\n                        <p className=\"font-semibold\">{item.productName}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                            {formatDistanceToNow(new Date(item.createdAt), { addSuffix: true })}\n                        </p>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                       <Badge variant={item.isProfitable ? \"default\" : \"destructive\"} className={cn(\"hidden sm:inline-flex\", item.isProfitable ? \"bg-green-600\" : \"\")}>\n                         {item.profitMargin.toFixed(1)}%\n                       </Badge>\n                       <Icons.ArrowRight className=\"h-4 w-4 text-muted-foreground\"/>\n                    </div>\n                </button>\n              ))}\n            </div>\n          )}\n        </ScrollArea>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;AAmBO,SAAS,mBAAmB,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAA2B;IACpG,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC;;0CACG,8OAAC,gIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;oBAEpB,QAAQ,MAAM,GAAG,mBAChB,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAK,SAAS;;0CACzC,8OAAC,2HAAA,CAAA,QAAK,CAAC,MAAM;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;0BAK/C,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,0IAAA,CAAA,aAAU;oBAAC,WAAU;8BACnB,QAAQ,MAAM,KAAK,kBAClB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,2HAAA,CAAA,QAAK,CAAC,OAAO;gCAAC,WAAU;;;;;;0CACzB,8OAAC;gCAAE,WAAU;0CAAe;;;;;;0CAC5B,8OAAC;gCAAE,WAAU;0CAAU;;;;;;;;;;;6CAGzB,8OAAC;wBAAI,WAAU;kCACZ,QAAQ,GAAG,CAAC,CAAC,qBACZ,8OAAC;gCAEC,SAAS,IAAM,SAAS;gCACxB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gIACA,eAAe,KAAK,EAAE,IAAI;;kDAG1B,8OAAC;;0DACG,8OAAC;gDAAE,WAAU;0DAAiB,KAAK,WAAW;;;;;;0DAC9C,8OAAC;gDAAE,WAAU;0DACR,CAAA,GAAA,mJAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,KAAK,KAAK,SAAS,GAAG;oDAAE,WAAW;gDAAK;;;;;;;;;;;;kDAGzE,8OAAC;wCAAI,WAAU;;0DACZ,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAS,KAAK,YAAY,GAAG,YAAY;gDAAe,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB,KAAK,YAAY,GAAG,iBAAiB;;oDACxI,KAAK,YAAY,CAAC,OAAO,CAAC;oDAAG;;;;;;;0DAEhC,8OAAC,2HAAA,CAAA,QAAK,CAAC,UAAU;gDAAC,WAAU;;;;;;;;;;;;;+BAjB5B,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;AA2B9B","debugId":null}},
    {"offset": {"line": 1350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/seller/calculator/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { getProfitMargin } from \"@/app/actions\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Calculation } from \"@/lib/types\";\nimport { ProfitCalculator } from \"@/components/profit-calculator\";\nimport { CalculationResult } from \"@/components/calculation-result\";\nimport { CalculationHistory } from \"@/components/calculation-history\";\nimport type { CalculateProfitMarginInput } from \"@/ai/flows/calculate-profit-margin\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { Icons } from \"@/components/icons\";\n\nexport default function CalculatorPage() {\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [history, setHistory] = React.useState<Calculation[]>([]);\n  const [selectedCalculation, setSelectedCalculation] = React.useState<Calculation | null>(null);\n\n  const handleFormSubmit = async (values: CalculateProfitMarginInput) => {\n    setIsLoading(true);\n    setSelectedCalculation(null); // Clear previous selection\n\n    const result = await getProfitMargin(values);\n\n    setIsLoading(false);\n\n    if (result.error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: result.error,\n      });\n      return;\n    }\n\n    if (result.data) {\n      const newCalculation: Calculation = {\n        ...values,\n        ...result.data,\n        id: new Date().toISOString(),\n        createdAt: new Date().toISOString(),\n      };\n      setHistory((prev) => [newCalculation, ...prev]);\n      setSelectedCalculation(newCalculation);\n    }\n  };\n  \n  const handleSelectHistory = (calculation: Calculation) => {\n    setSelectedCalculation(calculation);\n  };\n\n  const handleClearHistory = () => {\n    setHistory([]);\n    setSelectedCalculation(null);\n  }\n\n  return (\n    <div className=\"min-h-screen w-full bg-background\">\n      <header className=\"sticky top-0 z-10 w-full border-b bg-background/80 backdrop-blur-md\">\n            <div className=\"container mx-auto flex h-16 items-center justify-between px-4 md:px-6\">\n                <div className=\"flex items-center gap-2\">\n                    <Icons.Logo className=\"h-8 w-8 text-primary\" />\n                    <h1 className=\"font-headline text-2xl font-bold text-primary\">BharatAI Bazaar</h1>\n                </div>\n                 <div className=\"flex items-center gap-4\">\n                    <Button variant=\"outline\" size=\"sm\" asChild>\n                        <Link href=\"/seller\">Back to Dashboard</Link>\n                    </Button>\n                    <Button variant=\"ghost\" size=\"sm\" asChild>\n                        <Link href=\"/login\">Logout</Link>\n                    </Button>\n                </div>\n            </div>\n        </header>\n      <main className=\"container mx-auto flex-1 p-4 md:p-6\">\n        <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-3\">\n          <div className=\"lg:col-span-2\">\n            <CalculationResult calculation={selectedCalculation} isLoading={isLoading} />\n          </div>\n          <div className=\"space-y-6\">\n            <ProfitCalculator onSubmit={handleFormSubmit} isLoading={isLoading} />\n            <CalculationHistory \n                history={history}\n                onSelect={handleSelectHistory}\n                onClear={handleClearHistory}\n                selectedId={selectedCalculation?.id}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAZA;;;;;;;;;;;AAce,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAiB,EAAE;IAC9D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAsB;IAEzF,MAAM,mBAAmB,OAAO;QAC9B,aAAa;QACb,uBAAuB,OAAO,2BAA2B;QAEzD,MAAM,SAAS,MAAM,CAAA,GAAA,kJAAA,CAAA,kBAAe,AAAD,EAAE;QAErC,aAAa;QAEb,IAAI,OAAO,KAAK,EAAE;YAChB,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa,OAAO,KAAK;YAC3B;YACA;QACF;QAEA,IAAI,OAAO,IAAI,EAAE;YACf,MAAM,iBAA8B;gBAClC,GAAG,MAAM;gBACT,GAAG,OAAO,IAAI;gBACd,IAAI,IAAI,OAAO,WAAW;gBAC1B,WAAW,IAAI,OAAO,WAAW;YACnC;YACA,WAAW,CAAC,OAAS;oBAAC;uBAAmB;iBAAK;YAC9C,uBAAuB;QACzB;IACF;IAEA,MAAM,sBAAsB,CAAC;QAC3B,uBAAuB;IACzB;IAEA,MAAM,qBAAqB;QACzB,WAAW,EAAE;QACb,uBAAuB;IACzB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,2HAAA,CAAA,QAAK,CAAC,IAAI;oCAAC,WAAU;;;;;;8CACtB,8OAAC;oCAAG,WAAU;8CAAgD;;;;;;;;;;;;sCAEjE,8OAAC;4BAAI,WAAU;;8CACZ,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,MAAK;oCAAK,OAAO;8CACvC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;kDAAU;;;;;;;;;;;8CAEzB,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAQ,MAAK;oCAAK,OAAO;8CACrC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;kDAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAKtC,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,2IAAA,CAAA,oBAAiB;gCAAC,aAAa;gCAAqB,WAAW;;;;;;;;;;;sCAElE,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,0IAAA,CAAA,mBAAgB;oCAAC,UAAU;oCAAkB,WAAW;;;;;;8CACzD,8OAAC,4IAAA,CAAA,qBAAkB;oCACf,SAAS;oCACT,UAAU;oCACV,SAAS;oCACT,YAAY,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOjD","debugId":null}}]
}