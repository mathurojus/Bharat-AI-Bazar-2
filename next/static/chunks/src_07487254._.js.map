{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { comparePrices } from \"@/ai/flows/compare-prices\";\nimport { getSalesAnalytics } from \"@/ai/flows/sales-analytics\";\nimport type { ComparePricesInput, SalesAnalyticsInput } from \"@/lib/types\";\nimport { chat } from \"@/ai/flows/chat\";\nimport type { ChatInput, ChatServerInput } from \"@/lib/types\";\n\n\nexport async function getChatResponse(history: ChatInput['history'], message: string) {\n    try {\n        const response = await chat({ history, message });\n        return { response };\n    } catch (error) {\n        console.error(\"Chat flow failed:\", error);\n        return { error: \"Failed to get response from the assistant.\" };\n    }\n}\n\nexport async function getPriceComparison(values: ComparePricesInput) {\n  try {\n    const result = await comparePrices(values);\n    return { success: true, data: result };\n  } catch (error) {\n    console.error(\"Price comparison flow failed:\", error);\n    return { error: \"Failed to compare prices. Please try again.\" };\n  }\n}\n\n\nexport async function getSalesAnalyticsAction(values: SalesAnalyticsInput) {\n  try {\n    const result = await getSalesAnalytics(values);\n    return { success: true, data: result };\n  } catch (error) {\n    console.error(\"Sales analytics flow failed:\", error);\n    return { error: \"Failed to get sales analysis. Please try again.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA+BsB,0BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/types.ts"],"sourcesContent":["\nimport type { ComparePricesOutput as PriceOutput } from '@/ai/flows/compare-prices';\nimport { z } from 'zod';\n\nconst HistoryMessageSchema = z.object({\n  role: z.enum(['user', 'bot']),\n  content: z.string(),\n});\n\nexport const ChatInputSchema = z.object({\n  history: z.array(HistoryMessageSchema).describe('The conversation history.'),\n  message: z.string().describe('The latest user message.'),\n});\n\nexport type ChatInput = z.infer<typeof ChatInputSchema>;\nexport type ChatServerInput = z.input<typeof ChatInputSchema>\n\nexport const ChatOutputSchema = z.string().describe('The chatbot response.');\nexport type ChatOutput = z.infer<typeof ChatOutputSchema>;\n\n\nexport const comparePricesInputSchema = z.object({\n    productName: z.string().min(1, \"Product name is required.\"),\n});\n\nexport type ComparePricesInput = z.infer<typeof comparePricesInputSchema>;\nexport type { ComparePricesOutput } from '@/ai/flows/compare-prices';\n\n\nexport const SalesAnalyticsInputSchema = z.object({\n  productCategory: z.string().min(1, \"Product category is required.\").describe('The product category the user is selling (e.g., \"Cotton Kurtas\").'),\n  userSalesUnits: z.coerce.number().min(0, \"Units sold cannot be negative.\").describe('The number of units the user has sold in the last month.'),\n});\n\nexport const SalesAnalyticsOutputSchema = z.object({\n  marketAverageSales: z.number().describe('The estimated average monthly sales units for this product category in the market.'),\n  topCompetitorSales: z.number().describe('An estimated monthly sales figure for a top competitor in this category.'),\n  salesComparisonAnalysis: z.string().describe(\"A brief, encouraging analysis comparing the user's sales to the market and competitors.\"),\n  growthSuggestions: z.array(z.string()).describe('A list of 3-4 specific, actionable suggestions for the seller to improve their sales and compete more effectively.'),\n  marketTrend: z.string().describe('A one-sentence summary of the current market trend for this product category (e.g., \"Demand is increasing due to the upcoming festival season.\").'),\n});\n\nexport type SalesAnalyticsInput = z.infer<typeof SalesAnalyticsInputSchema>;\nexport type SalesAnalyticsOutput = z.infer<typeof SalesAnalyticsOutputSchema>;\n\n    "],"names":[],"mappings":";;;;;;;AAEA;;AAEA,MAAM,uBAAuB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,MAAM,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAM;IAC5B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEO,MAAM,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,SAAS,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,sBAAsB,QAAQ,CAAC;IAChD,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAKO,MAAM,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAI7C,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AACnC;AAMO,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,iCAAiC,QAAQ,CAAC;IAC7E,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,kCAAkC,QAAQ,CAAC;AACtF;AAEO,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxC,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxC,yBAAyB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7C,mBAAmB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAChD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/seller/analytics/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport Link from \"next/link\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent } from \"@/components/ui/chart\";\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis, Pie, PieChart, Cell, Line, LineChart, LabelList } from \"recharts\";\nimport { Icons } from \"@/components/icons\";\nimport { getSalesAnalyticsAction } from \"@/app/actions\";\nimport { SalesAnalyticsInputSchema, type SalesAnalyticsInput, type SalesAnalyticsOutput } from \"@/lib/types\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { List, CheckCircle, TrendingUp as TrendingUpIcon } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\n\nconst salesData = [\n    { date: \"Jan\", sales: 4000 },\n    { date: \"Feb\", sales: 3000 },\n    { date: \"Mar\", sales: 5000 },\n    { date: \"Apr\", sales: 4500 },\n    { date: \"May\", sales: 6000 },\n    { date: \"Jun\", sales: 5500 },\n]\n\nconst topProductsData = [\n  { name: 'Kurtas', value: 400, fill: 'hsl(var(--chart-1))' },\n  { name: 'Sarees', value: 300, fill: 'hsl(var(--chart-2))' },\n  { name: 'Spices', value: 300, fill: 'hsl(var(--chart-3))' },\n  { name: 'Handicrafts', value: 200, fill: 'hsl(var(--chart-4))' },\n]\n\nconst customerData = [\n    { name: 'New Customers', value: 1200 },\n    { name: 'Returning Customers', value: 2300 },\n]\n\nconst chartConfig = {\n  userSales: {\n    label: \"Your Sales\",\n    color: \"hsl(var(--primary))\",\n  },\n  marketAverage: {\n    label: \"Market Average\",\n    color: \"hsl(var(--chart-2))\",\n  },\n  topCompetitor: {\n    label: \"Top Competitor\",\n    color: \"hsl(var(--chart-4))\",\n  },\n} satisfies React.ComponentProps<typeof ChartContainer>[\"config\"];\n\n\nfunction AiSalesAnalyst() {\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [analysisResult, setAnalysisResult] = React.useState<SalesAnalyticsOutput | null>(null);\n\n  const form = useForm<SalesAnalyticsInput>({\n    resolver: zodResolver(SalesAnalyticsInputSchema),\n    defaultValues: {\n      productCategory: \"\",\n      userSalesUnits: 0,\n    },\n  });\n\n  async function onSubmit(values: SalesAnalyticsInput) {\n    setIsLoading(true);\n    setAnalysisResult(null);\n    const result = await getSalesAnalyticsAction(values);\n    setIsLoading(false);\n\n    if (result.error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Analysis Failed\",\n        description: result.error,\n      });\n    } else {\n      setAnalysisResult(result.data!);\n    }\n  }\n\n  const salesComparisonData = React.useMemo(() => {\n    if (!analysisResult) return [];\n    return [\n      { name: \"Comparison\", userSales: form.getValues(\"userSalesUnits\"), marketAverage: analysisResult.marketAverageSales, topCompetitor: analysisResult.topCompetitorSales },\n    ]\n  }, [analysisResult, form]);\n\n\n  return (\n    <Card className=\"lg:col-span-3\">\n        <CardHeader>\n            <CardTitle>AI Sales Analyst</CardTitle>\n            <CardDescription>Enter your sales data to get competitive insights and growth suggestions.</CardDescription>\n        </CardHeader>\n        <CardContent>\n           <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <div>\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"productCategory\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Product Category</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"e.g., Cotton Kurtas\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"userSalesUnits\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Units Sold (This Month)</FormLabel>\n                          <FormControl>\n                            <Input type=\"number\" placeholder=\"e.g., 150\" {...field} onChange={e => field.onChange(parseInt(e.target.value, 10) || 0)} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <Button type=\"submit\" disabled={isLoading} className=\"text-white\">\n                       {isLoading && <Icons.Loader className=\"animate-spin\" />}\n                      {isLoading ? \"Analyzing...\" : \"Get Analysis\"}\n                    </Button>\n                  </form>\n                </Form>\n              </div>\n\n              <div className=\"space-y-4\">\n                  {isLoading && (\n                    <div className=\"space-y-4\">\n                      <Skeleton className=\"h-24 w-full\" />\n                      <Skeleton className=\"h-32 w-full\" />\n                      <Skeleton className=\"h-40 w-full\" />\n                    </div>\n                  )}\n\n                  {analysisResult && (\n                    <div className=\"space-y-4\">\n                      <Alert>\n                        <TrendingUpIcon className=\"h-4 w-4\" />\n                        <AlertTitle>Market Trend</AlertTitle>\n                        <AlertDescription>\n                          {analysisResult.marketTrend}\n                        </AlertDescription>\n                      </Alert>\n\n                      <div>\n                          <h4 className=\"font-semibold text-sm mb-2\">Sales Comparison (Units Sold)</h4>\n                          <ChartContainer config={chartConfig} className=\"h-[200px] w-full\">\n                            <BarChart data={salesComparisonData} layout=\"vertical\" margin={{ left: 10, right: 10, top: 20}}>\n                              <CartesianGrid horizontal={false} />\n                              <XAxis type=\"number\" hide />\n                              <YAxis type=\"category\" dataKey=\"name\" hide={true}/>\n                              <ChartTooltip cursor={{ fill: 'hsl(var(--accent) / 0.2)' }} content={<ChartTooltipContent />} />\n                               <ChartLegend content={<ChartLegendContent />} />\n                              <Bar dataKey=\"topCompetitor\" stackId=\"a\" fill=\"var(--color-topCompetitor)\" radius={[0, 4, 4, 0]} />\n                              <Bar dataKey=\"marketAverage\" stackId=\"a\" fill=\"var(--color-marketAverage)\" />\n                              <Bar dataKey=\"userSales\" stackId=\"a\" fill=\"var(--color-userSales)\" radius={[4, 0, 0, 4]}>\n                                 <LabelList position=\"right\" offset={8} className=\"fill-foreground\" fontSize={12} formatter={(value: number) => value.toLocaleString()} />\n                              </Bar>\n                            </BarChart>\n                          </ChartContainer>\n                          <p className=\"text-xs text-muted-foreground mt-1 text-center\">{analysisResult.salesComparisonAnalysis}</p>\n                      </div>\n\n                      <div>\n                        <h4 className=\"font-semibold text-sm mb-2\">Growth Suggestions</h4>\n                        <ul className=\"space-y-2\">\n                          {analysisResult.growthSuggestions.map((suggestion, index) => (\n                            <li key={index} className=\"flex items-start gap-2 text-sm\">\n                              <CheckCircle className=\"h-4 w-4 mt-0.5 text-green-500 flex-shrink-0\" />\n                              <span>{suggestion}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  )}\n\n                   {!isLoading && !analysisResult && (\n                      <div className=\"flex flex-col items-center justify-center text-center text-muted-foreground h-full rounded-lg border border-dashed p-8\">\n                         <Icons.Sparkles className=\"h-10 w-10 mb-2 text-primary/50\"/>\n                         <p className=\"text-sm\">Your sales analysis will appear here.</p>\n                      </div>\n                   )}\n              </div>\n           </div>\n        </CardContent>\n    </Card>\n  )\n}\n\n\nexport default function AnalyticsPage() {\n  return (\n    <div className=\"min-h-screen w-full bg-background\">\n      <header className=\"sticky top-0 z-10 w-full border-b bg-background/80 backdrop-blur-md\">\n        <div className=\"container mx-auto flex h-16 items-center justify-between px-4 md:px-6\">\n          <div className=\"flex items-center gap-2\">\n             <Icons.Logo className=\"h-8 w-8 text-primary\" />\n             <h1 className=\"font-headline text-2xl font-bold text-primary\">BharatAI Bazaar</h1>\n          </div>\n          <nav className=\"flex items-center gap-4\">\n            <Button variant=\"outline\" size=\"sm\" asChild>\n                <Link href=\"/seller\">Dashboard</Link>\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" asChild>\n                <Link href=\"/login\">Logout</Link>\n            </Button>\n          </nav>\n        </div>\n      </header>\n\n      <main className=\"container mx-auto px-4 md:px-6 py-8\">\n        <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">Seller Analytics</h1>\n            <p className=\"text-muted-foreground\">Detailed insights into your sales performance.</p>\n        </div>\n        <section className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          <AiSalesAnalyst />\n\n          <Card>\n            <CardHeader>\n                <CardTitle>Sales Overview</CardTitle>\n                <CardDescription>Your sales performance over the last 6 months.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <ChartContainer config={{}} className=\"h-[250px] w-full\">\n                    <LineChart data={salesData} margin={{ top: 5, right: 10, left: -20, bottom: 0 }}>\n                        <CartesianGrid vertical={false} />\n                        <XAxis dataKey=\"date\" tickLine={false} axisLine={false} tickMargin={8} />\n                        <YAxis tickLine={false} axisLine={false} tickMargin={8} tickFormatter={(value) => `₹${Number(value) / 1000}k`} />\n                        <ChartTooltip content={<ChartTooltipContent />} />\n                        <Line type=\"monotone\" dataKey=\"sales\" stroke=\"hsl(var(--primary))\" strokeWidth={2} dot={false} />\n                    </LineChart>\n                </ChartContainer>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardHeader>\n                <CardTitle>Top Selling Products</CardTitle>\n                <CardDescription>A breakdown of your most popular product categories.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <ChartContainer config={{}} className=\"h-[250px] w-full\">\n                    <PieChart>\n                        <ChartTooltip content={<ChartTooltipContent nameKey=\"name\" />} />\n                        <Pie data={topProductsData} dataKey=\"value\" nameKey=\"name\" innerRadius={60} outerRadius={80} paddingAngle={5} />\n                    </PieChart>\n                </ChartContainer>\n            </CardContent>\n          </Card>\n          <Card>\n             <CardHeader>\n                <CardTitle>Customer Insights</CardTitle>\n                <CardDescription>A look at your customer demographics.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"flex flex-col items-center justify-center h-[250px]\">\n                <div className=\"text-4xl font-bold\">3,500</div>\n                <p className=\"text-muted-foreground\">Total Customers</p>\n                <div className=\"mt-4 flex gap-4 text-center\">\n                    <div>\n                        <div className=\"font-bold text-lg\">{customerData[0].value}</div>\n                        <div className=\"text-xs text-muted-foreground\">{customerData[0].name}</div>\n                    </div>\n                    <div>\n                        <div className=\"font-bold text-lg\">{customerData[1].value}</div>\n                        <div className=\"text-xs text-muted-foreground\">{customerData[1].name}</div>\n                    </div>\n                </div>\n            </CardContent>\n          </Card>\n        </section>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}